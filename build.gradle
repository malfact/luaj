plugins {
    id 'java-library'
    id "io.github.goooler.shadow" version "8.1.7"
    id 'maven-publish'
}

group = 'net.malfact.luaj'
version = '1.1.0'

sourceSets {
    main {
        java {
            srcDirs=['src/core/java','src/jse/java']
        }
//        resources {srcDirs('src/core/resources')}
    }
    test {
        java {srcDirs=['src/test/java']}
        resources {srcDirs=['src/test/resources']}
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Apache Commons Bytecode Engineering Library
    implementation 'org.apache.bcel:bcel:6.6.0'

    testImplementation(platform('org.junit:junit-bom:5.10.2'))
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

shadowJar {
    dependencies {
        include(dependency('org.apache.bcel:bcel:6.6.0'))
    }
    minimize()
    archiveFileName = "luaj2-${project.version}-snapshot.jar"
    archiveClassifier.set('')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/malfact/luaj")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}